model users {
    id            String       @id @default(uuid())
    name          String?
    email         String       @unique
    emailVerified DateTime?
    image         String?
    password      String
    phone         String
    status        status       @default(INACTIVE)
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    deletedAt     DateTime?
    user_roles    user_roles[]
    accounts      accounts[]
    sessions      sessions[]
}

model accounts {
    id                String  @id @default(uuid())
    users             users   @relation(fields: [usersId], references: [id])
    usersId           String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    session_state     String?
}

model sessions {
    id           String   @id @default(uuid())
    sessionToken String   @unique
    users        users    @relation(fields: [usersId], references: [id])
    usersId      String
    expires      DateTime
}

model roles {
    id         String       @id @default(uuid())
    name       String       @unique
    status     status       @default(INACTIVE)
    createdAt  DateTime     @default(now())
    updatedAt  DateTime     @updatedAt
    deletedAt  DateTime?
    user_roles user_roles[]
}

model user_roles {
    user   users  @relation(fields: [userId], references: [id])
    userId String
    role   roles  @relation(fields: [roleId], references: [id])
    roleId String

    @@id([userId, roleId])
}

model permissions {
    id                 String               @id @default(uuid())
    name               String               @unique
    status             status               @default(INACTIVE)
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt
    deletedAt          DateTime?
    entity_permissions entity_permissions[]
}

enum entity {
    USER
    ROLE
}

model entity_permissions {
    entity       entity
    entityId     String
    permission   permissions @relation(fields: [permissionId], references: [id])
    permissionId String

    @@id([entity, entityId, permissionId])
}
